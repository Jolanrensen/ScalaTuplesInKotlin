package nl.jolanrensen.scalaTuplesInKotlin

import scala.*
@JvmName("mapPerTypeTuple1T1R1") fun <T1, R1> Tuple1<T1>.mapPerType(func1: (T1) -> R1): Tuple1<R1> = Tuple1<R1>(func1(this._1()))
@JvmName("mapPerTypeTuple2T1T1R1R1") fun <T1, R1> Tuple2<T1, T1>.mapPerType(func1: (T1) -> R1): Tuple2<R1, R1> = Tuple2<R1, R1>(func1(this._1()), func1(this._2()))
@JvmName("mapPerTypeTuple2T1T2R1R2") fun <T1, T2, R1, R2> Tuple2<T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple2<R1, R2> = Tuple2<R1, R2>(func1(this._1()), func2(this._2()))
@JvmName("mapPerTypeTuple3T1T1T1R1R1R1") fun <T1, R1> Tuple3<T1, T1, T1>.mapPerType(func1: (T1) -> R1): Tuple3<R1, R1, R1> = Tuple3<R1, R1, R1>(func1(this._1()), func1(this._2()), func1(this._3()))
@JvmName("mapPerTypeTuple3T1T1T2R1R1R2") fun <T1, T2, R1, R2> Tuple3<T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple3<R1, R1, R2> = Tuple3<R1, R1, R2>(func1(this._1()), func1(this._2()), func2(this._3()))
@JvmName("mapPerTypeTuple3T1T2T1R1R2R1") fun <T1, T2, R1, R2> Tuple3<T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple3<R1, R2, R1> = Tuple3<R1, R2, R1>(func1(this._1()), func2(this._2()), func1(this._3()))
@JvmName("mapPerTypeTuple3T1T2T2R1R2R2") fun <T1, T2, R1, R2> Tuple3<T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple3<R1, R2, R2> = Tuple3<R1, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()))
@JvmName("mapPerTypeTuple3T1T2T3R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple3<T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple3<R1, R2, R3> = Tuple3<R1, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()))
@JvmName("mapPerTypeTuple4T1T1T1T1R1R1R1R1") fun <T1, R1> Tuple4<T1, T1, T1, T1>.mapPerType(func1: (T1) -> R1): Tuple4<R1, R1, R1, R1> = Tuple4<R1, R1, R1, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()))
@JvmName("mapPerTypeTuple4T1T1T1T2R1R1R1R2") fun <T1, T2, R1, R2> Tuple4<T1, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R1, R1, R2> = Tuple4<R1, R1, R1, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()))
@JvmName("mapPerTypeTuple4T1T1T2T1R1R1R2R1") fun <T1, T2, R1, R2> Tuple4<T1, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R1, R2, R1> = Tuple4<R1, R1, R2, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()))
@JvmName("mapPerTypeTuple4T1T1T2T2R1R1R2R2") fun <T1, T2, R1, R2> Tuple4<T1, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R1, R2, R2> = Tuple4<R1, R1, R2, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()))
@JvmName("mapPerTypeTuple4T1T1T2T3R1R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R1, R2, R3> = Tuple4<R1, R1, R2, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()))
@JvmName("mapPerTypeTuple4T1T2T1T1R1R2R1R1") fun <T1, T2, R1, R2> Tuple4<T1, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R2, R1, R1> = Tuple4<R1, R2, R1, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()))
@JvmName("mapPerTypeTuple4T1T2T1T2R1R2R1R2") fun <T1, T2, R1, R2> Tuple4<T1, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R2, R1, R2> = Tuple4<R1, R2, R1, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()))
@JvmName("mapPerTypeTuple4T1T2T1T3R1R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R2, R1, R3> = Tuple4<R1, R2, R1, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()))
@JvmName("mapPerTypeTuple4T1T2T2T1R1R2R2R1") fun <T1, T2, R1, R2> Tuple4<T1, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R2, R2, R1> = Tuple4<R1, R2, R2, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()))
@JvmName("mapPerTypeTuple4T1T2T2T2R1R2R2R2") fun <T1, T2, R1, R2> Tuple4<T1, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple4<R1, R2, R2, R2> = Tuple4<R1, R2, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()))
@JvmName("mapPerTypeTuple4T1T2T2T3R1R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R2, R2, R3> = Tuple4<R1, R2, R2, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()))
@JvmName("mapPerTypeTuple4T1T2T3T1R1R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R2, R3, R1> = Tuple4<R1, R2, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()))
@JvmName("mapPerTypeTuple4T1T2T3T2R1R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R2, R3, R2> = Tuple4<R1, R2, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()))
@JvmName("mapPerTypeTuple4T1T2T3T3R1R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple4<T1, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple4<R1, R2, R3, R3> = Tuple4<R1, R2, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()))
@JvmName("mapPerTypeTuple4T1T2T3T4R1R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple4<T1, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple4<R1, R2, R3, R4> = Tuple4<R1, R2, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()))
@JvmName("mapPerTypeTuple5T1T1T1T1T1R1R1R1R1R1") fun <T1, R1> Tuple5<T1, T1, T1, T1, T1>.mapPerType(func1: (T1) -> R1): Tuple5<R1, R1, R1, R1, R1> = Tuple5<R1, R1, R1, R1, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T1T1T1T2R1R1R1R1R2") fun <T1, T2, R1, R2> Tuple5<T1, T1, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R1, R1, R2> = Tuple5<R1, R1, R1, R1, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T1T1T2T1R1R1R1R2R1") fun <T1, T2, R1, R2> Tuple5<T1, T1, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R1, R2, R1> = Tuple5<R1, R1, R1, R2, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T1T1T2T2R1R1R1R2R2") fun <T1, T2, R1, R2> Tuple5<T1, T1, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R1, R2, R2> = Tuple5<R1, R1, R1, R2, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T1T1T2T3R1R1R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R1, R2, R3> = Tuple5<R1, R1, R1, R2, R3>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T1T1R1R1R2R1R1") fun <T1, T2, R1, R2> Tuple5<T1, T1, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R2, R1, R1> = Tuple5<R1, R1, R2, R1, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T1T2R1R1R2R1R2") fun <T1, T2, R1, R2> Tuple5<T1, T1, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R2, R1, R2> = Tuple5<R1, R1, R2, R1, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T1T3R1R1R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R2, R1, R3> = Tuple5<R1, R1, R2, R1, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T2T1R1R1R2R2R1") fun <T1, T2, R1, R2> Tuple5<T1, T1, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R2, R2, R1> = Tuple5<R1, R1, R2, R2, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T2T2R1R1R2R2R2") fun <T1, T2, R1, R2> Tuple5<T1, T1, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R1, R2, R2, R2> = Tuple5<R1, R1, R2, R2, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T2T3R1R1R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R2, R2, R3> = Tuple5<R1, R1, R2, R2, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T3T1R1R1R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R2, R3, R1> = Tuple5<R1, R1, R2, R3, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T3T2R1R1R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R2, R3, R2> = Tuple5<R1, R1, R2, R3, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T3T3R1R1R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T1, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R1, R2, R3, R3> = Tuple5<R1, R1, R2, R3, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T1T2T3T4R1R1R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T1, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R1, R2, R3, R4> = Tuple5<R1, R1, R2, R3, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T1T1R1R2R1R1R1") fun <T1, T2, R1, R2> Tuple5<T1, T2, T1, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R1, R1, R1> = Tuple5<R1, R2, R1, R1, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T1T2R1R2R1R1R2") fun <T1, T2, R1, R2> Tuple5<T1, T2, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R1, R1, R2> = Tuple5<R1, R2, R1, R1, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T1T3R1R2R1R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T1, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R1, R1, R3> = Tuple5<R1, R2, R1, R1, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T2T1R1R2R1R2R1") fun <T1, T2, R1, R2> Tuple5<T1, T2, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R1, R2, R1> = Tuple5<R1, R2, R1, R2, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T2T2R1R2R1R2R2") fun <T1, T2, R1, R2> Tuple5<T1, T2, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R1, R2, R2> = Tuple5<R1, R2, R1, R2, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T2T3R1R2R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R1, R2, R3> = Tuple5<R1, R2, R1, R2, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T3T1R1R2R1R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T1, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R1, R3, R1> = Tuple5<R1, R2, R1, R3, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T3T2R1R2R1R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T1, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R1, R3, R2> = Tuple5<R1, R2, R1, R3, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T3T3R1R2R1R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T1, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R1, R3, R3> = Tuple5<R1, R2, R1, R3, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T1T3T4R1R2R1R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T1, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R1, R3, R4> = Tuple5<R1, R2, R1, R3, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T1T1R1R2R2R1R1") fun <T1, T2, R1, R2> Tuple5<T1, T2, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R2, R1, R1> = Tuple5<R1, R2, R2, R1, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T1T2R1R2R2R1R2") fun <T1, T2, R1, R2> Tuple5<T1, T2, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R2, R1, R2> = Tuple5<R1, R2, R2, R1, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T1T3R1R2R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R2, R1, R3> = Tuple5<R1, R2, R2, R1, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T2T1R1R2R2R2R1") fun <T1, T2, R1, R2> Tuple5<T1, T2, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R2, R2, R1> = Tuple5<R1, R2, R2, R2, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T2T2R1R2R2R2R2") fun <T1, T2, R1, R2> Tuple5<T1, T2, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple5<R1, R2, R2, R2, R2> = Tuple5<R1, R2, R2, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T2T3R1R2R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R2, R2, R3> = Tuple5<R1, R2, R2, R2, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T3T1R1R2R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R2, R3, R1> = Tuple5<R1, R2, R2, R3, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T3T2R1R2R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R2, R3, R2> = Tuple5<R1, R2, R2, R3, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T3T3R1R2R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R2, R3, R3> = Tuple5<R1, R2, R2, R3, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T2T3T4R1R2R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R2, R3, R4> = Tuple5<R1, R2, R2, R3, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T1T1R1R2R3R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R1, R1> = Tuple5<R1, R2, R3, R1, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T1T2R1R2R3R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R1, R2> = Tuple5<R1, R2, R3, R1, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T1T3R1R2R3R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R1, R3> = Tuple5<R1, R2, R3, R1, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T1T4R1R2R3R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R1, R4> = Tuple5<R1, R2, R3, R1, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T2T1R1R2R3R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R2, R1> = Tuple5<R1, R2, R3, R2, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T2T2R1R2R3R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R2, R2> = Tuple5<R1, R2, R3, R2, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T2T3R1R2R3R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R2, R3> = Tuple5<R1, R2, R3, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T2T4R1R2R3R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R2, R4> = Tuple5<R1, R2, R3, R2, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T3T1R1R2R3R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R3, R1> = Tuple5<R1, R2, R3, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T3T2R1R2R3R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R3, R2> = Tuple5<R1, R2, R3, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T3T3R1R2R3R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple5<T1, T2, T3, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple5<R1, R2, R3, R3, R3> = Tuple5<R1, R2, R3, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T3T4R1R2R3R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R3, R4> = Tuple5<R1, R2, R3, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T4T1R1R2R3R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R4, R1> = Tuple5<R1, R2, R3, R4, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T4T2R1R2R3R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R4, R2> = Tuple5<R1, R2, R3, R4, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T4T3R1R2R3R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R4, R3> = Tuple5<R1, R2, R3, R4, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T4T4R1R2R3R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple5<T1, T2, T3, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple5<R1, R2, R3, R4, R4> = Tuple5<R1, R2, R3, R4, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()))
@JvmName("mapPerTypeTuple5T1T2T3T4T5R1R2R3R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple5<T1, T2, T3, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple5<R1, R2, R3, R4, R5> = Tuple5<R1, R2, R3, R4, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()))
@JvmName("mapPerTypeTuple6T1T1T1T1T1T1R1R1R1R1R1R1") fun <T1, R1> Tuple6<T1, T1, T1, T1, T1, T1>.mapPerType(func1: (T1) -> R1): Tuple6<R1, R1, R1, R1, R1, R1> = Tuple6<R1, R1, R1, R1, R1, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T1T1T2R1R1R1R1R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R1, R1, R2> = Tuple6<R1, R1, R1, R1, R1, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T1T2T1R1R1R1R1R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R1, R2, R1> = Tuple6<R1, R1, R1, R1, R2, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T1T2T2R1R1R1R1R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R1, R2, R2> = Tuple6<R1, R1, R1, R1, R2, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T1T2T3R1R1R1R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R1, R2, R3> = Tuple6<R1, R1, R1, R1, R2, R3>(func1(this._1()), func1(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T1T1R1R1R1R2R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R2, R1, R1> = Tuple6<R1, R1, R1, R2, R1, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T1T2R1R1R1R2R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R2, R1, R2> = Tuple6<R1, R1, R1, R2, R1, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T1T3R1R1R1R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R2, R1, R3> = Tuple6<R1, R1, R1, R2, R1, R3>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T2T1R1R1R1R2R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R2, R2, R1> = Tuple6<R1, R1, R1, R2, R2, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T2T2R1R1R1R2R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T1, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R1, R2, R2, R2> = Tuple6<R1, R1, R1, R2, R2, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T2T3R1R1R1R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R2, R2, R3> = Tuple6<R1, R1, R1, R2, R2, R3>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T3T1R1R1R1R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R2, R3, R1> = Tuple6<R1, R1, R1, R2, R3, R1>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T3T2R1R1R1R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R2, R3, R2> = Tuple6<R1, R1, R1, R2, R3, R2>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T3T3R1R1R1R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T1, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R1, R2, R3, R3> = Tuple6<R1, R1, R1, R2, R3, R3>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T1T2T3T4R1R1R1R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T1, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R1, R2, R3, R4> = Tuple6<R1, R1, R1, R2, R3, R4>(func1(this._1()), func1(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T1T1R1R1R2R1R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T1, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R1, R1, R1> = Tuple6<R1, R1, R2, R1, R1, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T1T2R1R1R2R1R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R1, R1, R2> = Tuple6<R1, R1, R2, R1, R1, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T1T3R1R1R2R1R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T1, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R1, R1, R3> = Tuple6<R1, R1, R2, R1, R1, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T2T1R1R1R2R1R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R1, R2, R1> = Tuple6<R1, R1, R2, R1, R2, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T2T2R1R1R2R1R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R1, R2, R2> = Tuple6<R1, R1, R2, R1, R2, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T2T3R1R1R2R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R1, R2, R3> = Tuple6<R1, R1, R2, R1, R2, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T3T1R1R1R2R1R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T1, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R1, R3, R1> = Tuple6<R1, R1, R2, R1, R3, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T3T2R1R1R2R1R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T1, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R1, R3, R2> = Tuple6<R1, R1, R2, R1, R3, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T3T3R1R1R2R1R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T1, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R1, R3, R3> = Tuple6<R1, R1, R2, R1, R3, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T1T3T4R1R1R2R1R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T1, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R1, R3, R4> = Tuple6<R1, R1, R2, R1, R3, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T1T1R1R1R2R2R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R2, R1, R1> = Tuple6<R1, R1, R2, R2, R1, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T1T2R1R1R2R2R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R2, R1, R2> = Tuple6<R1, R1, R2, R2, R1, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T1T3R1R1R2R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R2, R1, R3> = Tuple6<R1, R1, R2, R2, R1, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T2T1R1R1R2R2R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R2, R2, R1> = Tuple6<R1, R1, R2, R2, R2, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T2T2R1R1R2R2R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T1, T2, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R1, R2, R2, R2, R2> = Tuple6<R1, R1, R2, R2, R2, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T2T3R1R1R2R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R2, R2, R3> = Tuple6<R1, R1, R2, R2, R2, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T3T1R1R1R2R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R2, R3, R1> = Tuple6<R1, R1, R2, R2, R3, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T3T2R1R1R2R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R2, R3, R2> = Tuple6<R1, R1, R2, R2, R3, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T3T3R1R1R2R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R2, R3, R3> = Tuple6<R1, R1, R2, R2, R3, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T2T3T4R1R1R2R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R2, R3, R4> = Tuple6<R1, R1, R2, R2, R3, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T1T1R1R1R2R3R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R1, R1> = Tuple6<R1, R1, R2, R3, R1, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T1T2R1R1R2R3R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R1, R2> = Tuple6<R1, R1, R2, R3, R1, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T1T3R1R1R2R3R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R1, R3> = Tuple6<R1, R1, R2, R3, R1, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T1T4R1R1R2R3R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R1, R4> = Tuple6<R1, R1, R2, R3, R1, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T2T1R1R1R2R3R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R2, R1> = Tuple6<R1, R1, R2, R3, R2, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T2T2R1R1R2R3R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R2, R2> = Tuple6<R1, R1, R2, R3, R2, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T2T3R1R1R2R3R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R2, R3> = Tuple6<R1, R1, R2, R3, R2, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T2T4R1R1R2R3R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R2, R4> = Tuple6<R1, R1, R2, R3, R2, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T3T1R1R1R2R3R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R3, R1> = Tuple6<R1, R1, R2, R3, R3, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T3T2R1R1R2R3R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R3, R2> = Tuple6<R1, R1, R2, R3, R3, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T3T3R1R1R2R3R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T1, T2, T3, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R1, R2, R3, R3, R3> = Tuple6<R1, R1, R2, R3, R3, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T3T4R1R1R2R3R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R3, R4> = Tuple6<R1, R1, R2, R3, R3, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T4T1R1R1R2R3R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R4, R1> = Tuple6<R1, R1, R2, R3, R4, R1>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T4T2R1R1R2R3R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R4, R2> = Tuple6<R1, R1, R2, R3, R4, R2>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T4T3R1R1R2R3R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R4, R3> = Tuple6<R1, R1, R2, R3, R4, R3>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T4T4R1R1R2R3R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T1, T2, T3, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R1, R2, R3, R4, R4> = Tuple6<R1, R1, R2, R3, R4, R4>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T1T2T3T4T5R1R1R2R3R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T1, T2, T3, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R1, R2, R3, R4, R5> = Tuple6<R1, R1, R2, R3, R4, R5>(func1(this._1()), func1(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T1T1R1R2R1R1R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T1, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R1, R1, R1> = Tuple6<R1, R2, R1, R1, R1, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T1T2R1R2R1R1R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R1, R1, R2> = Tuple6<R1, R2, R1, R1, R1, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T1T3R1R2R1R1R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T1, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R1, R1, R3> = Tuple6<R1, R2, R1, R1, R1, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T2T1R1R2R1R1R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R1, R2, R1> = Tuple6<R1, R2, R1, R1, R2, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T2T2R1R2R1R1R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R1, R2, R2> = Tuple6<R1, R2, R1, R1, R2, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T2T3R1R2R1R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R1, R2, R3> = Tuple6<R1, R2, R1, R1, R2, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T3T1R1R2R1R1R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T1, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R1, R3, R1> = Tuple6<R1, R2, R1, R1, R3, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T3T2R1R2R1R1R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T1, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R1, R3, R2> = Tuple6<R1, R2, R1, R1, R3, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T3T3R1R2R1R1R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T1, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R1, R3, R3> = Tuple6<R1, R2, R1, R1, R3, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T1T3T4R1R2R1R1R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T1, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R1, R3, R4> = Tuple6<R1, R2, R1, R1, R3, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func1(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T1T1R1R2R1R2R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R2, R1, R1> = Tuple6<R1, R2, R1, R2, R1, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T1T2R1R2R1R2R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R2, R1, R2> = Tuple6<R1, R2, R1, R2, R1, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T1T3R1R2R1R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R2, R1, R3> = Tuple6<R1, R2, R1, R2, R1, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T2T1R1R2R1R2R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R2, R2, R1> = Tuple6<R1, R2, R1, R2, R2, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T2T2R1R2R1R2R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T1, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R1, R2, R2, R2> = Tuple6<R1, R2, R1, R2, R2, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T2T3R1R2R1R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R2, R2, R3> = Tuple6<R1, R2, R1, R2, R2, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T3T1R1R2R1R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R2, R3, R1> = Tuple6<R1, R2, R1, R2, R3, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T3T2R1R2R1R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R2, R3, R2> = Tuple6<R1, R2, R1, R2, R3, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T3T3R1R2R1R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R2, R3, R3> = Tuple6<R1, R2, R1, R2, R3, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T2T3T4R1R2R1R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R2, R3, R4> = Tuple6<R1, R2, R1, R2, R3, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func2(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T1T1R1R2R1R3R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R1, R1> = Tuple6<R1, R2, R1, R3, R1, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T1T2R1R2R1R3R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R1, R2> = Tuple6<R1, R2, R1, R3, R1, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T1T3R1R2R1R3R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R1, R3> = Tuple6<R1, R2, R1, R3, R1, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T1T4R1R2R1R3R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R1, R4> = Tuple6<R1, R2, R1, R3, R1, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T2T1R1R2R1R3R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R2, R1> = Tuple6<R1, R2, R1, R3, R2, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T2T2R1R2R1R3R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R2, R2> = Tuple6<R1, R2, R1, R3, R2, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T2T3R1R2R1R3R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R2, R3> = Tuple6<R1, R2, R1, R3, R2, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T2T4R1R2R1R3R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R2, R4> = Tuple6<R1, R2, R1, R3, R2, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T3T1R1R2R1R3R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R3, R1> = Tuple6<R1, R2, R1, R3, R3, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T3T2R1R2R1R3R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R3, R2> = Tuple6<R1, R2, R1, R3, R3, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T3T3R1R2R1R3R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T1, T3, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R1, R3, R3, R3> = Tuple6<R1, R2, R1, R3, R3, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T3T4R1R2R1R3R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R3, R4> = Tuple6<R1, R2, R1, R3, R3, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T4T1R1R2R1R3R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R4, R1> = Tuple6<R1, R2, R1, R3, R4, R1>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T4T2R1R2R1R3R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R4, R2> = Tuple6<R1, R2, R1, R3, R4, R2>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T4T3R1R2R1R3R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R4, R3> = Tuple6<R1, R2, R1, R3, R4, R3>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T4T4R1R2R1R3R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T1, T3, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R1, R3, R4, R4> = Tuple6<R1, R2, R1, R3, R4, R4>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T1T3T4T5R1R2R1R3R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T1, T3, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R1, R3, R4, R5> = Tuple6<R1, R2, R1, R3, R4, R5>(func1(this._1()), func2(this._2()), func1(this._3()), func3(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T1T1R1R2R2R1R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T1, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R1, R1, R1> = Tuple6<R1, R2, R2, R1, R1, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T1T2R1R2R2R1R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R1, R1, R2> = Tuple6<R1, R2, R2, R1, R1, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T1T3R1R2R2R1R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T1, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R1, R1, R3> = Tuple6<R1, R2, R2, R1, R1, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T2T1R1R2R2R1R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R1, R2, R1> = Tuple6<R1, R2, R2, R1, R2, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T2T2R1R2R2R1R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R1, R2, R2> = Tuple6<R1, R2, R2, R1, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T2T3R1R2R2R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R1, R2, R3> = Tuple6<R1, R2, R2, R1, R2, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T3T1R1R2R2R1R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T1, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R1, R3, R1> = Tuple6<R1, R2, R2, R1, R3, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T3T2R1R2R2R1R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T1, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R1, R3, R2> = Tuple6<R1, R2, R2, R1, R3, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T3T3R1R2R2R1R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T1, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R1, R3, R3> = Tuple6<R1, R2, R2, R1, R3, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T1T3T4R1R2R2R1R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T1, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R1, R3, R4> = Tuple6<R1, R2, R2, R1, R3, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func1(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T1T1R1R2R2R2R1R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R2, R1, R1> = Tuple6<R1, R2, R2, R2, R1, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T1T2R1R2R2R2R1R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R2, R1, R2> = Tuple6<R1, R2, R2, R2, R1, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T1T3R1R2R2R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R2, R1, R3> = Tuple6<R1, R2, R2, R2, R1, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T2T1R1R2R2R2R2R1") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R2, R2, R1> = Tuple6<R1, R2, R2, R2, R2, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T2T2R1R2R2R2R2R2") fun <T1, T2, R1, R2> Tuple6<T1, T2, T2, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2): Tuple6<R1, R2, R2, R2, R2, R2> = Tuple6<R1, R2, R2, R2, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T2T3R1R2R2R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R2, R2, R3> = Tuple6<R1, R2, R2, R2, R2, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T3T1R1R2R2R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R2, R3, R1> = Tuple6<R1, R2, R2, R2, R3, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T3T2R1R2R2R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R2, R3, R2> = Tuple6<R1, R2, R2, R2, R3, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T3T3R1R2R2R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R2, R3, R3> = Tuple6<R1, R2, R2, R2, R3, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T2T3T4R1R2R2R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R2, R3, R4> = Tuple6<R1, R2, R2, R2, R3, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func2(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T1T1R1R2R2R3R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R1, R1> = Tuple6<R1, R2, R2, R3, R1, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T1T2R1R2R2R3R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R1, R2> = Tuple6<R1, R2, R2, R3, R1, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T1T3R1R2R2R3R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R1, R3> = Tuple6<R1, R2, R2, R3, R1, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T1T4R1R2R2R3R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R1, R4> = Tuple6<R1, R2, R2, R3, R1, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T2T1R1R2R2R3R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R2, R1> = Tuple6<R1, R2, R2, R3, R2, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T2T2R1R2R2R3R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R2, R2> = Tuple6<R1, R2, R2, R3, R2, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T2T3R1R2R2R3R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R2, R3> = Tuple6<R1, R2, R2, R3, R2, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T2T4R1R2R2R3R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R2, R4> = Tuple6<R1, R2, R2, R3, R2, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T3T1R1R2R2R3R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R3, R1> = Tuple6<R1, R2, R2, R3, R3, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T3T2R1R2R2R3R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R3, R2> = Tuple6<R1, R2, R2, R3, R3, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T3T3R1R2R2R3R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T2, T3, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R2, R3, R3, R3> = Tuple6<R1, R2, R2, R3, R3, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T3T4R1R2R2R3R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R3, R4> = Tuple6<R1, R2, R2, R3, R3, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T4T1R1R2R2R3R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R4, R1> = Tuple6<R1, R2, R2, R3, R4, R1>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T4T2R1R2R2R3R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R4, R2> = Tuple6<R1, R2, R2, R3, R4, R2>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T4T3R1R2R2R3R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R4, R3> = Tuple6<R1, R2, R2, R3, R4, R3>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T4T4R1R2R2R3R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T2, T3, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R2, R3, R4, R4> = Tuple6<R1, R2, R2, R3, R4, R4>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T2T3T4T5R1R2R2R3R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T2, T3, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R2, R3, R4, R5> = Tuple6<R1, R2, R2, R3, R4, R5>(func1(this._1()), func2(this._2()), func2(this._3()), func3(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T1T1R1R2R3R1R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R1, R1> = Tuple6<R1, R2, R3, R1, R1, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T1T2R1R2R3R1R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R1, R2> = Tuple6<R1, R2, R3, R1, R1, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T1T3R1R2R3R1R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R1, R3> = Tuple6<R1, R2, R3, R1, R1, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T1T4R1R2R3R1R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R1, R4> = Tuple6<R1, R2, R3, R1, R1, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T2T1R1R2R3R1R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R2, R1> = Tuple6<R1, R2, R3, R1, R2, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T2T2R1R2R3R1R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R2, R2> = Tuple6<R1, R2, R3, R1, R2, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T2T3R1R2R3R1R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R2, R3> = Tuple6<R1, R2, R3, R1, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T2T4R1R2R3R1R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R2, R4> = Tuple6<R1, R2, R3, R1, R2, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T3T1R1R2R3R1R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R3, R1> = Tuple6<R1, R2, R3, R1, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T3T2R1R2R3R1R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R3, R2> = Tuple6<R1, R2, R3, R1, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T3T3R1R2R3R1R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T1, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R1, R3, R3> = Tuple6<R1, R2, R3, R1, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T3T4R1R2R3R1R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R3, R4> = Tuple6<R1, R2, R3, R1, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T4T1R1R2R3R1R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R4, R1> = Tuple6<R1, R2, R3, R1, R4, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T4T2R1R2R3R1R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R4, R2> = Tuple6<R1, R2, R3, R1, R4, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T4T3R1R2R3R1R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R4, R3> = Tuple6<R1, R2, R3, R1, R4, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T4T4R1R2R3R1R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T1, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R1, R4, R4> = Tuple6<R1, R2, R3, R1, R4, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T1T4T5R1R2R3R1R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T1, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R1, R4, R5> = Tuple6<R1, R2, R3, R1, R4, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func1(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T1T1R1R2R3R2R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R1, R1> = Tuple6<R1, R2, R3, R2, R1, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T1T2R1R2R3R2R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R1, R2> = Tuple6<R1, R2, R3, R2, R1, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T1T3R1R2R3R2R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R1, R3> = Tuple6<R1, R2, R3, R2, R1, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T1T4R1R2R3R2R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R1, R4> = Tuple6<R1, R2, R3, R2, R1, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T2T1R1R2R3R2R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R2, R1> = Tuple6<R1, R2, R3, R2, R2, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T2T2R1R2R3R2R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R2, R2> = Tuple6<R1, R2, R3, R2, R2, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T2T3R1R2R3R2R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R2, R3> = Tuple6<R1, R2, R3, R2, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T2T4R1R2R3R2R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R2, R4> = Tuple6<R1, R2, R3, R2, R2, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T3T1R1R2R3R2R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R3, R1> = Tuple6<R1, R2, R3, R2, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T3T2R1R2R3R2R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R3, R2> = Tuple6<R1, R2, R3, R2, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T3T3R1R2R3R2R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T2, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R2, R3, R3> = Tuple6<R1, R2, R3, R2, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T3T4R1R2R3R2R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R3, R4> = Tuple6<R1, R2, R3, R2, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T4T1R1R2R3R2R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R4, R1> = Tuple6<R1, R2, R3, R2, R4, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T4T2R1R2R3R2R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R4, R2> = Tuple6<R1, R2, R3, R2, R4, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T4T3R1R2R3R2R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R4, R3> = Tuple6<R1, R2, R3, R2, R4, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T4T4R1R2R3R2R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T2, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R2, R4, R4> = Tuple6<R1, R2, R3, R2, R4, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T2T4T5R1R2R3R2R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T2, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R2, R4, R5> = Tuple6<R1, R2, R3, R2, R4, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func2(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T1T1R1R2R3R3R1R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R1, R1> = Tuple6<R1, R2, R3, R3, R1, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T1T2R1R2R3R3R1R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R1, R2> = Tuple6<R1, R2, R3, R3, R1, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T1T3R1R2R3R3R1R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R1, R3> = Tuple6<R1, R2, R3, R3, R1, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T1T4R1R2R3R3R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R1, R4> = Tuple6<R1, R2, R3, R3, R1, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T2T1R1R2R3R3R2R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R2, R1> = Tuple6<R1, R2, R3, R3, R2, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T2T2R1R2R3R3R2R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R2, R2> = Tuple6<R1, R2, R3, R3, R2, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T2T3R1R2R3R3R2R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R2, R3> = Tuple6<R1, R2, R3, R3, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T2T4R1R2R3R3R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R2, R4> = Tuple6<R1, R2, R3, R3, R2, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T3T1R1R2R3R3R3R1") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R3, R1> = Tuple6<R1, R2, R3, R3, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T3T2R1R2R3R3R3R2") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R3, R2> = Tuple6<R1, R2, R3, R3, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T3T3R1R2R3R3R3R3") fun <T1, T2, T3, R1, R2, R3> Tuple6<T1, T2, T3, T3, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3): Tuple6<R1, R2, R3, R3, R3, R3> = Tuple6<R1, R2, R3, R3, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T3T4R1R2R3R3R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R3, R4> = Tuple6<R1, R2, R3, R3, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T4T1R1R2R3R3R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R4, R1> = Tuple6<R1, R2, R3, R3, R4, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T4T2R1R2R3R3R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R4, R2> = Tuple6<R1, R2, R3, R3, R4, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T4T3R1R2R3R3R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R4, R3> = Tuple6<R1, R2, R3, R3, R4, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T4T4R1R2R3R3R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T3, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R3, R4, R4> = Tuple6<R1, R2, R3, R3, R4, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T3T4T5R1R2R3R3R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T3, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R3, R4, R5> = Tuple6<R1, R2, R3, R3, R4, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func3(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T1T1R1R2R3R4R1R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T1, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R1, R1> = Tuple6<R1, R2, R3, R4, R1, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T1T2R1R2R3R4R1R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T1, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R1, R2> = Tuple6<R1, R2, R3, R4, R1, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T1T3R1R2R3R4R1R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T1, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R1, R3> = Tuple6<R1, R2, R3, R4, R1, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T1T4R1R2R3R4R1R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T1, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R1, R4> = Tuple6<R1, R2, R3, R4, R1, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T1T5R1R2R3R4R1R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T1, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R1, R5> = Tuple6<R1, R2, R3, R4, R1, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func1(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T2T1R1R2R3R4R2R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T2, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R2, R1> = Tuple6<R1, R2, R3, R4, R2, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T2T2R1R2R3R4R2R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T2, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R2, R2> = Tuple6<R1, R2, R3, R4, R2, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T2T3R1R2R3R4R2R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T2, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R2, R3> = Tuple6<R1, R2, R3, R4, R2, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T2T4R1R2R3R4R2R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T2, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R2, R4> = Tuple6<R1, R2, R3, R4, R2, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T2T5R1R2R3R4R2R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T2, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R2, R5> = Tuple6<R1, R2, R3, R4, R2, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func2(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T3T1R1R2R3R4R3R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T3, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R3, R1> = Tuple6<R1, R2, R3, R4, R3, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T3T2R1R2R3R4R3R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T3, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R3, R2> = Tuple6<R1, R2, R3, R4, R3, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T3T3R1R2R3R4R3R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T3, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R3, R3> = Tuple6<R1, R2, R3, R4, R3, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T3T4R1R2R3R4R3R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T3, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R3, R4> = Tuple6<R1, R2, R3, R4, R3, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T3T5R1R2R3R4R3R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T3, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R3, R5> = Tuple6<R1, R2, R3, R4, R3, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func3(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T4T1R1R2R3R4R4R1") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T4, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R4, R1> = Tuple6<R1, R2, R3, R4, R4, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T4T2R1R2R3R4R4R2") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T4, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R4, R2> = Tuple6<R1, R2, R3, R4, R4, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T4T3R1R2R3R4R4R3") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T4, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R4, R3> = Tuple6<R1, R2, R3, R4, R4, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T4T4R1R2R3R4R4R4") fun <T1, T2, T3, T4, R1, R2, R3, R4> Tuple6<T1, T2, T3, T4, T4, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4): Tuple6<R1, R2, R3, R4, R4, R4> = Tuple6<R1, R2, R3, R4, R4, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T4T5R1R2R3R4R4R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T4, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R4, R5> = Tuple6<R1, R2, R3, R4, R4, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func4(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T1R1R2R3R4R5R1") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T5, T1>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R5, R1> = Tuple6<R1, R2, R3, R4, R5, R1>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func1(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T2R1R2R3R4R5R2") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T5, T2>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R5, R2> = Tuple6<R1, R2, R3, R4, R5, R2>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func2(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T3R1R2R3R4R5R3") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T5, T3>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R5, R3> = Tuple6<R1, R2, R3, R4, R5, R3>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func3(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T4R1R2R3R4R5R4") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T5, T4>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R5, R4> = Tuple6<R1, R2, R3, R4, R5, R4>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func4(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T5R1R2R3R4R5R5") fun <T1, T2, T3, T4, T5, R1, R2, R3, R4, R5> Tuple6<T1, T2, T3, T4, T5, T5>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5): Tuple6<R1, R2, R3, R4, R5, R5> = Tuple6<R1, R2, R3, R4, R5, R5>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func5(this._6()))
@JvmName("mapPerTypeTuple6T1T2T3T4T5T6R1R2R3R4R5R6") fun <T1, T2, T3, T4, T5, T6, R1, R2, R3, R4, R5, R6> Tuple6<T1, T2, T3, T4, T5, T6>.mapPerType(func1: (T1) -> R1, func2: (T2) -> R2, func3: (T3) -> R3, func4: (T4) -> R4, func5: (T5) -> R5, func6: (T6) -> R6): Tuple6<R1, R2, R3, R4, R5, R6> = Tuple6<R1, R2, R3, R4, R5, R6>(func1(this._1()), func2(this._2()), func3(this._3()), func4(this._4()), func5(this._5()), func6(this._6()))

